/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/RafaelAll.glb -o src/Rafael.jsx 
*/

import { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { Html } from "@react-three/drei";

const chatText = [
  "Greetings! My Name is: Rafael",
  "I was born in Puerto Rico",
  "Later on in my life I joined the US Army",
  "There I became a veteran of both Iraq and Afghanistan conflicts",
  "I currently live in Texas",
  "I am a very a very passionate and creative person",
  "On my free time, I enjoy dancing Salsa",
  "I believe that everything should be done with excellence in mind",
  "That is what I bring to your team",
  "Thank You!"
];
//Idle, Rallying, Salsa, Salute, Walking, WaveTwo
const chatActions = [
  "WaveTwo",
  "Idle",
  "Walking",
  "Salute",
  "WaveTwo",
  "Idle",
  "Salsa",
  "Idle",
  "Rallying",
  "WaveTwo"
];

export function Rafael(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/models/RafaelAll.glb");
  const { actions } = useAnimations(animations, group);
  const [textPosition, setTextPosition] = useState(0);
  const [lastButton, setLastButton] = useState(true)
  useEffect(() => {
    const action = chatActions[textPosition];
    //console.log(actions)
    actions[action].reset().fadeIn(0.5).play();
    return () => actions[action]?.fadeOut(0.5);
  }, [textPosition]);
  const clickBubble = () => {
    if (textPosition === chatText.length -2) {
      setLastButton(false)
    }
    if (textPosition < chatText.length -1) {
      setTextPosition((prev) => (prev + 1) % chatText.length)
    } 
  }
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature">
          <primitive object={nodes.Hips} />
          <skinnedMesh
            name="Rafael"
            geometry={nodes.Rafael.geometry}
            material={materials.All}
            skeleton={nodes.Rafael.skeleton}
          />
          <Html
            as="div"
            wrapperClass="w-96 bg-transparent"
            position={[0.3, 2.3, 0]}
          >
            <div className="chat chat-start">
              <div className="chat-bubble  bg-blue-400 text-white/80">
                {chatText[textPosition]}
                <div className="flex justify-end">
                  {lastButton && <button className="btn btn-outline btn-xs mt-2 text-white/80 hover:border-white hover:bg-primary/80" onClick={clickBubble}>
                    Next
                  </button>
                  }
                </div>
              </div>
            </div>
          </Html>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/RafaelAll.glb");

